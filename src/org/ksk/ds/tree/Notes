
Tree terminology :

        Tree's are Hierarchical not a liner DS like stacks, queues and Array's
        Tree is a DS which made up of lots of nodes, each node point to a Number of nodes, not a just one
        There is no order tree can maintain, its not a imp though
        Tree is typically used to represent hierarchical information
        A general tree DS can have any number of children but these tress are less useful and not very commonly used as a DS- It is not widely used
        Binary tree - in a binary tree each node can have 0,1,2 children
                                                                                                                                 A
                                                                                                                                / \
        Root Node - Parent node - A                                                                                            B   C
        Edge - A link from parent node to child node                                                                              / \
        Leaf - A node with no children    - F H G                                                                                D   E
        Sibling node : Node which are at same level                                                                             / \   \
                                                                                                                               F   H   G

        C is a ancestor of F
        F is a descendent of C
        A is a root node also a ancestor for all it's decendent nodes

   Tree Traversal :
                    BFT - Breadth First
                    DFT - Depth First

    visiting and processed : is called traversal
    Breadth-First : Visiting nodes at every level before moving on to the next level
                       Start with Root node - it's at level 0
                       Check whether there are other nodes at same level and visit them
                       Once a level is exhausted then we move to next level
                       Continue this till every node of the tree has been visited
                       --> ABCDEFFGH
                       --> Start from the root and add it to a Queue
                       --> Dqueue and process the node and it's left and then right child to the queue
                       --> Continue this as long as the queue is not empty

    Depth-First   : Go deep into the tree
                  : Pre-Order
                  : In-Order
                  : Post-Order
                  : DF traversal involves going right to the leaf of the binary tree first before moving up the tree
                  : Going DEEP before moving up
                  : All types of traversal's using recursion
                  : At every point we work with a subtree rooted at some node
                  : The processing can be performed
                        - Before - Pre-order
                        - In-Between or - IN-Order
                        - After - Post-order
                  :Pre-order ---> A-->B-->C-->D-->F-->H-->E-->G

     If you print Binary Search Tree in sorted order  - traverse the tree in  In-order

    Traversing : Traverse entire tree
    Searching : Finding out the node

    2nd time visit --> In Order  --> Left --> Root --> Right

    All the traversing [In order/ Pre order / Post order] takes o(n) time and space complexity
